<!DOCTYPE html>
<html>
<head>
  <% include ../partials/header.ejs %>
  <link rel="stylesheet" type="text/css" href="/stylesheets/parent-dashboard-common.css"/>
  <link rel="stylesheet" type="text/css" media="screen and (max-width: 500px)" href="/stylesheets/parent-dashboard-small.css"/>
  <link rel="stylesheet" type="text/css" media="screen and (min-width: 501px)" href="/stylesheets/parent-dashboard-large.css"/>
</head>

<body ng-app="parentView" ng-controller="parentViewCtrl">
<% include ../partials/nav.ejs %>

<div class="parent-view-container">
    <div class="chore-list">
      <li class="add-chore" id="add"><span class="glyphicon glyphicon-plus"></span><i class="fa fa-plus" aria-hidden="true"></i>&nbsp&nbsp&nbspAdd a chore</li>
      <ul dnd-list="models.template" class="unassigned"
      dnd-effect-allowed="copy">
        <li ng-repeat="item in models.template"
          dnd-draggable="item"
          dnd-selected="choreClicked(item, $index, 'Unassigned')"
          dnd-linked="linkedCallback(item)"
          dnd-effect-allowed="link"
          class="unassigned">
          {{item.name}}
        </li>
      </ul>
    </div>
      <ul class="kids-lists">
        <li ng-repeat="(listName, list) in models.lists"
                  class="kid-list">
            <div class="kids-chores">
              <h6 class="kid-name"><span class="glyphicon glyphicon-piggy-bank"></span>{{listName}}</h6>
              <hr>
              <ul dnd-list="list">
                  <li ng-repeat="item in list"
                      dnd-selected="choreClicked(item, $index, listName)"
                      dnd-draggable="item"
                      dnd-moved="list.splice($index, 1)"
                      dnd-effect-allowed="move"> {{item.name}}</li>
              </ul>
            </div>
            <div class="kid-bank">
              <h3 class="bank-amount">$5</h3>
            </div>
        </li>
      </ul>
    </div>

<div id="add-chore-modal" class="modal fade">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <input type="text" id="add-chore-title" class="chore-title" placeholder="Enter Chore Title"/>
      </div>
      <div class="modal-body">
        <label for="add-chore-description">Description</label>
        <textarea id="add-chore-description" name="description" rows="4"></textarea>
        <div class="input-group">
          <span class="input-group-addon">$</span>
          <input id="add-chore-value" type="number" step="any" class="form-control" placeholder="Value"/>
        </div>
      </div>
      <div class="modal-footer">
        <section>
          <button id="js-trigger-overlay" ng-click="addChoreTemplate()" type="button">Done</button>
        </section>
        <button id="cancel-button" data-dismiss="modal" type="button">Cancel</button>
      </div>
    </div>
  </div>
</div>
<div id="edit-chore-modal" class="modal fade">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <input type="text" id="edit-chore-title" class="chore-title" placeholder="Enter Chore Title"/>
      </div>
      <div class="modal-body">
        <label for="edit-chore-description" class="description-label">Description</label>
        <textarea id="edit-chore-description" name="description" rows="4"></textarea>
        <div class="input-group">
          <span class="input-group-addon">$</span>
          <input id="edit-chore-value" type="number" step="any" class="form-control" placeholder="Value"/>
        </div>
        </br>
        <select id="selectChild">
        </select>
      </div>
      <div class="modal-footer">
        <button id="delete-button" ng-click="deleteChore()" type="button"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span></button>
        <section>
          <button id="js-trigger-overlay" ng-click="saveChore()" type="button">Save</button>
        </section>
        <button id="cancel-button" data-dismiss="modal" type="button">Cancel</button>
      </div>
    </div>
  </div>
</div>

<div id="addChild" class="modal fade">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3>Add A Child</h3>
      </div>
      <div class="modal-body">
        <form>


            <label><b>Child Name</b></label>
            <input type="text" placeholder="Enter Child Name" id="child-name" name="name" required>

            <label><b>Username</b></label>
            <input type="text" placeholder="Enter Username" id="child-username" name="username" required>

            <label><b>Password</b></label>
            <input type="password" placeholder="Enter Password" id="child-psw" name="psw" required>

            <label><b>Repeat Password</b></label>
            <input type="password" placeholder="Repeat Password" id="child-psw-repeat" name="psw-repeat" required>

            <p><br></p>
            <div id="warning"></div>
        </form>
      </div>
      <div class="modal-footer">
        <section>
          <button id="js-trigger-overlay" ng-click="addChild()" type="button">Submit</button>
        </section>
        <button id="cancel-button" data-dismiss="modal" type="button">Cancel</button>
      </div>
    </div>
  </div>
</div>


<script>
var children = [];
var childrenNames = [];
var app = angular.module("parentView", ['dndLists']);
var parentId = 0;
var parentName = null;

app.controller("parentViewCtrl", function($scope, $http) {


    $http.get('parent').
          success(function (response) {
      parentId = response["pid"];
      parentName = response["name"];
  });

  $http.get('chores').
    success(function(data, status, headers, config) {
      $scope.models = data;
    }).
    error(function(data, status, headers, config) {
      console.log("Error accessing chores endpoint");
  });

  $http.get('child').
    success(function(response) {
      children = response["children"];
      for (var i = 0; i < children.length; i++) {
        childrenNames.push(children[i]["name"]);
      }
    }).
    error(function(error) {
      console.log("Error accessing chores endpoint");
  });

  $scope.linkedCallback = function(item) {
    // Find out who the chore was assigned to using the ID
    var assigneeName = findAssignee($scope.models.lists, item['id'], childrenNames);
    var assigneeId = getChildId(assigneeName);
      
    // Insert new chore into database
    var newChore =
    {
      "owner": parseInt(assigneeId),
      "name": item['name'],
      "description": item['description'],
      "value": parseInt(item['value']) || 0,
      "status": "assigned"
    };

    // Add new chore to database
    $http.post("assigned_chore", newChore).success(function(chore) {
      console.log("Successfully assigned chore");

      // Update ID to reflect database
      var chores = $scope.models.lists[assigneeName];
      for (var i in chores) {
        if (chores[i]["id"] == item["id"]) {
          $scope.models.lists[assigneeName][i]["id"] = chore["id"];
        }
      }
    }).error(function(error) {
      console.log("Failed to add chore: " + error);
    });  
  };

  $scope.addChoreTemplate = function() {
    var newChoreTemplate =
    {
      "owner": parentId,
      "name": $('#add-chore-title').val(),
      "description": $('#add-chore-description').val(),
      "value": parseInt($('#add-chore-value').val()) || 0
    };
    $('#add-chore-modal').modal('hide');

    // Insert new chore template into database
    $http.post("chore-template", newChoreTemplate).success(function(chore) {
        // Add new chore template to list of chore templates
        $scope.models.template.push(chore);
    }).error(function(error) {
        console.log("Failed to add chore template");
    });
  };

  $scope.addChild = function() {
    var newChild = {
        "name": $('#child-name').val(),
        "username": $('#child-username').val(),
        "pwd": $('#child-psw').val(),
        "pwdRepeat": $('#child-psw-repeat').val(),
    };

    $http.post("child", newChild).success(function(child) {
        $('#addChild').modal('hide');
        children.push({id: child.id, name: child.name});
        childrenNames.push(child.name);
    }).error(function (error) {
        $('#warning').text(error.error);
    });

  };

  $scope.saveChore = function() {
    var editedChore =
    {
      "owner": parentId,
      "name": $('#edit-chore-title').val(),
      "description": $('#edit-chore-description').val(),
      "value": parseInt($('#edit-chore-value').val()) || 0
    }
    var lists = $scope.models.lists;
    var assignee = $scope.models.selected[1] || "Unassigned";
    var item = $scope.models.selected[0];
    var list = lists[assignee];
    if (assignee === "Unassigned") {
       list =  $scope.models.template;
    }

    for (var i = 0; i < list.length; i++) {
      if (list[i] == item) {
        var newAssignee = $('#selectChild').val() || "Unassigned";

        if (newAssignee === "Unassigned") { // Template was updated
            $scope.models.template[i] = editedChore;

            // TODO do the put request to save template changes to the server
        }
        else { // Assigned Chore was updated or created
            if (assignee === "Unassigned") { // Assigned Chore is created

                var childId =  getChildId(newAssignee);
                editedChore["owner"] = childId;
                editedChore["status"] = "assigned";
                $http.post("assigned_chore", editedChore).success(function(chore) {
                    editedChore["id"] = chore.id;
                    $scope.models.lists[newAssignee].push(editedChore);
                    console.log("Successfully assigned chore to " + newAssignee);
                }).error(function(error) {
                    console.log("Failed to add chore: " + error);
                });
            }
            else { // Assigned chore was updated
                // Update models
                $scope.models.lists[assignee].splice(i, 1);
                $scope.models.lists[newAssignee].push(editedChore);
                // TODO do the put request to updatre assigned_chore
            }
        }
        break;
      }
    }
    $('#edit-chore-modal').modal('hide');
  }

  $scope.choreClicked = function(item, index, assignee) {
    $('#edit-chore-modal').modal('show');

    $('#edit-chore-title').val(item['name']);
    $('#edit-chore-description').val(item['description']);
    $('#edit-chore-value').val(item['value']);

    if (assignee == "Unassigned") {
      assignee = "";
    }
    $scope.models.selected = [item, assignee];

    // Remove old select options
    removeOptions(document.getElementById('selectChild'));

    // Populate select input for assigning a chore to a child
    var children = childrenNames;
    var index = children.indexOf(assignee);
    if (index > -1) {
      children.splice(index, 1);
    }

    children.unshift(assignee);

    var select = document.getElementById('selectChild');
    for (var i = 0; i < children.length; i++) {
        var opt = document.createElement('option');
        opt.value = children[i];
        opt.innerHTML = "&nbsp&nbsp" + children[i] + "&nbsp&nbsp&nbsp&nbsp&nbsp";
        select.appendChild(opt);
    }
  }

  $scope.deleteChore = function() {
    var lists = $scope.models.lists;   
    var assignee = $scope.models.selected[1] || "Unassigned";
    var item = $scope.models.selected[0];

    var list = lists[assignee];
    for (var i = 0; i < list.length; i++) {
      if (list[i] == item) {
        $scope.models.lists[assignee].splice(i, 1);
        break;
      }
    }
    $('#edit-chore-modal').modal('hide');
  }
});

$(function(){
  $("#add").on("click",function() {
    $('#add-chore-modal').modal('show');

    $('#add-chore-title').val("");
    $('#add-chore-description').val(null);
    $('#add-chore-value').val(null);

    $('#add-chore-title').focus();
    return false;
  });

  $("#add-child").on("click", function () {
    $("#addChild").modal('show');

    $('#child-name').val("");
    $('#child-psw').val("");
    $('#child-psw-repeat').val("");
    $('#child-username').val("");
    $('#warning').val("");
    $('#child-name').focus();

    return false;
    });
});

// Doesn't work, help pls
$('#chore-modal').on('show.bs.modal', function () {
  window.setTimeout(function ()
  {
    $('#add-chore-title').focus();
  }, 0);
});

function getChildId(childName) {
  for (var i = 0; i < children.length; i++) {
    if (children[i]["name"] == childName) {
      return children[i]["id"];
    }
  }
}

function findAssignee(lists, id, children) {
  for (var index in children) {
    var child = children[index];
    if (child !== "") {
        var list = lists[child];
        for (var i = 0; i < list.length; i++) {
            var chore = list[i];
            if (chore['id'] == id) {
                return child;
            }
        }
    }
  }
}

function removeOptions(selectbox)
{
    var i;
    for(i = selectbox.options.length - 1 ; i >= 0 ; i--)
    {
        selectbox.remove(i);
    }
}
</script>
</body>
</html>
